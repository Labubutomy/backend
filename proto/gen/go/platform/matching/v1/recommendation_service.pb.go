// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: platform/matching/v1/recommendation_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskContext struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TaskId           string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	SkillTags        []string               `protobuf:"bytes,2,rep,name=skill_tags,json=skillTags,proto3" json:"skill_tags,omitempty"`
	BudgetLowerBound float64                `protobuf:"fixed64,3,opt,name=budget_lower_bound,json=budgetLowerBound,proto3" json:"budget_lower_bound,omitempty"`
	BudgetUpperBound float64                `protobuf:"fixed64,4,opt,name=budget_upper_bound,json=budgetUpperBound,proto3" json:"budget_upper_bound,omitempty"`
	Title            string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Description      string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Locale           string                 `protobuf:"bytes,7,opt,name=locale,proto3" json:"locale,omitempty"`
	Priority         uint32                 `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`
	EmbeddingVector  []float32              `protobuf:"fixed32,9,rep,packed,name=embedding_vector,json=embeddingVector,proto3" json:"embedding_vector,omitempty"` // Pre-computed semantic embedding
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Metadata         map[string]string      `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Extensible attributes
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TaskContext) Reset() {
	*x = TaskContext{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskContext) ProtoMessage() {}

func (x *TaskContext) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskContext.ProtoReflect.Descriptor instead.
func (*TaskContext) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{0}
}

func (x *TaskContext) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskContext) GetSkillTags() []string {
	if x != nil {
		return x.SkillTags
	}
	return nil
}

func (x *TaskContext) GetBudgetLowerBound() float64 {
	if x != nil {
		return x.BudgetLowerBound
	}
	return 0
}

func (x *TaskContext) GetBudgetUpperBound() float64 {
	if x != nil {
		return x.BudgetUpperBound
	}
	return 0
}

func (x *TaskContext) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TaskContext) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskContext) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *TaskContext) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *TaskContext) GetEmbeddingVector() []float32 {
	if x != nil {
		return x.EmbeddingVector
	}
	return nil
}

func (x *TaskContext) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TaskContext) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CandidateContext struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	UserId               string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SkillTags            []string               `protobuf:"bytes,2,rep,name=skill_tags,json=skillTags,proto3" json:"skill_tags,omitempty"`
	HourlyRate           float64                `protobuf:"fixed64,3,opt,name=hourly_rate,json=hourlyRate,proto3" json:"hourly_rate,omitempty"`
	Rating               float64                `protobuf:"fixed64,4,opt,name=rating,proto3" json:"rating,omitempty"`
	ResponseRate         float64                `protobuf:"fixed64,5,opt,name=response_rate,json=responseRate,proto3" json:"response_rate,omitempty"`                             // Historical response rate (0.0-1.0)
	AcceptanceRate       float64                `protobuf:"fixed64,6,opt,name=acceptance_rate,json=acceptanceRate,proto3" json:"acceptance_rate,omitempty"`                       // Historical acceptance rate (0.0-1.0)
	AvgResponseTimeHours float64                `protobuf:"fixed64,7,opt,name=avg_response_time_hours,json=avgResponseTimeHours,proto3" json:"avg_response_time_hours,omitempty"` // Average response time in hours
	EmbeddingVector      []float32              `protobuf:"fixed32,8,rep,packed,name=embedding_vector,json=embeddingVector,proto3" json:"embedding_vector,omitempty"`             // Pre-computed profile embedding
	LastActiveAt         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_active_at,json=lastActiveAt,proto3" json:"last_active_at,omitempty"`
	Timezone             string                 `protobuf:"bytes,10,opt,name=timezone,proto3" json:"timezone,omitempty"`
	PreferredDomains     []string               `protobuf:"bytes,11,rep,name=preferred_domains,json=preferredDomains,proto3" json:"preferred_domains,omitempty"`                                                                          // e.g., ["backend", "mobile", "ai"]
	SkillConfidence      map[string]float64     `protobuf:"bytes,12,rep,name=skill_confidence,json=skillConfidence,proto3" json:"skill_confidence,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"` // skill -> confidence score
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CandidateContext) Reset() {
	*x = CandidateContext{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CandidateContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandidateContext) ProtoMessage() {}

func (x *CandidateContext) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandidateContext.ProtoReflect.Descriptor instead.
func (*CandidateContext) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{1}
}

func (x *CandidateContext) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CandidateContext) GetSkillTags() []string {
	if x != nil {
		return x.SkillTags
	}
	return nil
}

func (x *CandidateContext) GetHourlyRate() float64 {
	if x != nil {
		return x.HourlyRate
	}
	return 0
}

func (x *CandidateContext) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *CandidateContext) GetResponseRate() float64 {
	if x != nil {
		return x.ResponseRate
	}
	return 0
}

func (x *CandidateContext) GetAcceptanceRate() float64 {
	if x != nil {
		return x.AcceptanceRate
	}
	return 0
}

func (x *CandidateContext) GetAvgResponseTimeHours() float64 {
	if x != nil {
		return x.AvgResponseTimeHours
	}
	return 0
}

func (x *CandidateContext) GetEmbeddingVector() []float32 {
	if x != nil {
		return x.EmbeddingVector
	}
	return nil
}

func (x *CandidateContext) GetLastActiveAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActiveAt
	}
	return nil
}

func (x *CandidateContext) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *CandidateContext) GetPreferredDomains() []string {
	if x != nil {
		return x.PreferredDomains
	}
	return nil
}

func (x *CandidateContext) GetSkillConfidence() map[string]float64 {
	if x != nil {
		return x.SkillConfidence
	}
	return nil
}

type ScoreTaskCandidatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *TaskContext           `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Candidates    []*CandidateContext    `protobuf:"bytes,2,rep,name=candidates,proto3" json:"candidates,omitempty"`
	Limit         uint32                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"` // Maximum number of scored candidates to return
	Strategy      *ScoringStrategy       `protobuf:"bytes,4,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Weights       map[string]float64     `protobuf:"bytes,5,rep,name=weights,proto3" json:"weights,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"` // Override default scoring weights
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScoreTaskCandidatesRequest) Reset() {
	*x = ScoreTaskCandidatesRequest{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScoreTaskCandidatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreTaskCandidatesRequest) ProtoMessage() {}

func (x *ScoreTaskCandidatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreTaskCandidatesRequest.ProtoReflect.Descriptor instead.
func (*ScoreTaskCandidatesRequest) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{2}
}

func (x *ScoreTaskCandidatesRequest) GetTask() *TaskContext {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *ScoreTaskCandidatesRequest) GetCandidates() []*CandidateContext {
	if x != nil {
		return x.Candidates
	}
	return nil
}

func (x *ScoreTaskCandidatesRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ScoreTaskCandidatesRequest) GetStrategy() *ScoringStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *ScoreTaskCandidatesRequest) GetWeights() map[string]float64 {
	if x != nil {
		return x.Weights
	}
	return nil
}

type ScoringStrategy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                         // "skill_match", "ml_hybrid", "greedy", "balanced"
	Parameters    map[string]float64     `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"` // Strategy-specific parameters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScoringStrategy) Reset() {
	*x = ScoringStrategy{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScoringStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoringStrategy) ProtoMessage() {}

func (x *ScoringStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoringStrategy.ProtoReflect.Descriptor instead.
func (*ScoringStrategy) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{3}
}

func (x *ScoringStrategy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScoringStrategy) GetParameters() map[string]float64 {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type CandidateScore struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Score         float64                `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"` // Final composite score (0.0-1.0)
	Breakdown     *ScoreBreakdown        `protobuf:"bytes,3,opt,name=breakdown,proto3" json:"breakdown,omitempty"`
	Reasons       []string               `protobuf:"bytes,4,rep,name=reasons,proto3" json:"reasons,omitempty"` // Human-readable explanations
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CandidateScore) Reset() {
	*x = CandidateScore{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CandidateScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandidateScore) ProtoMessage() {}

func (x *CandidateScore) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandidateScore.ProtoReflect.Descriptor instead.
func (*CandidateScore) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{4}
}

func (x *CandidateScore) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CandidateScore) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *CandidateScore) GetBreakdown() *ScoreBreakdown {
	if x != nil {
		return x.Breakdown
	}
	return nil
}

func (x *CandidateScore) GetReasons() []string {
	if x != nil {
		return x.Reasons
	}
	return nil
}

type ScoreBreakdown struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SkillMatchScore     float64                `protobuf:"fixed64,1,opt,name=skill_match_score,json=skillMatchScore,proto3" json:"skill_match_score,omitempty"`           // Tag intersection score
	EmbeddingSimilarity float64                `protobuf:"fixed64,2,opt,name=embedding_similarity,json=embeddingSimilarity,proto3" json:"embedding_similarity,omitempty"` // Semantic similarity score
	RatingScore         float64                `protobuf:"fixed64,3,opt,name=rating_score,json=ratingScore,proto3" json:"rating_score,omitempty"`                         // Normalized rating score
	ResponsivenessScore float64                `protobuf:"fixed64,4,opt,name=responsiveness_score,json=responsivenessScore,proto3" json:"responsiveness_score,omitempty"` // Response time penalty
	AvailabilityScore   float64                `protobuf:"fixed64,5,opt,name=availability_score,json=availabilityScore,proto3" json:"availability_score,omitempty"`       // Online/recent activity boost
	PriceCompatibility  float64                `protobuf:"fixed64,6,opt,name=price_compatibility,json=priceCompatibility,proto3" json:"price_compatibility,omitempty"`    // Budget vs hourly rate match
	DiversityBonus      float64                `protobuf:"fixed64,7,opt,name=diversity_bonus,json=diversityBonus,proto3" json:"diversity_bonus,omitempty"`                // Diversity in recommendations
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ScoreBreakdown) Reset() {
	*x = ScoreBreakdown{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScoreBreakdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreBreakdown) ProtoMessage() {}

func (x *ScoreBreakdown) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreBreakdown.ProtoReflect.Descriptor instead.
func (*ScoreBreakdown) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{5}
}

func (x *ScoreBreakdown) GetSkillMatchScore() float64 {
	if x != nil {
		return x.SkillMatchScore
	}
	return 0
}

func (x *ScoreBreakdown) GetEmbeddingSimilarity() float64 {
	if x != nil {
		return x.EmbeddingSimilarity
	}
	return 0
}

func (x *ScoreBreakdown) GetRatingScore() float64 {
	if x != nil {
		return x.RatingScore
	}
	return 0
}

func (x *ScoreBreakdown) GetResponsivenessScore() float64 {
	if x != nil {
		return x.ResponsivenessScore
	}
	return 0
}

func (x *ScoreBreakdown) GetAvailabilityScore() float64 {
	if x != nil {
		return x.AvailabilityScore
	}
	return 0
}

func (x *ScoreBreakdown) GetPriceCompatibility() float64 {
	if x != nil {
		return x.PriceCompatibility
	}
	return 0
}

func (x *ScoreBreakdown) GetDiversityBonus() float64 {
	if x != nil {
		return x.DiversityBonus
	}
	return 0
}

type ScoreTaskCandidatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scores        []*CandidateScore      `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
	Metadata      *ScoringMetadata       `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScoreTaskCandidatesResponse) Reset() {
	*x = ScoreTaskCandidatesResponse{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScoreTaskCandidatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreTaskCandidatesResponse) ProtoMessage() {}

func (x *ScoreTaskCandidatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreTaskCandidatesResponse.ProtoReflect.Descriptor instead.
func (*ScoreTaskCandidatesResponse) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{6}
}

func (x *ScoreTaskCandidatesResponse) GetScores() []*CandidateScore {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ScoreTaskCandidatesResponse) GetMetadata() *ScoringMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ScoringMetadata struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	TotalCandidatesEvaluated int32                  `protobuf:"varint,1,opt,name=total_candidates_evaluated,json=totalCandidatesEvaluated,proto3" json:"total_candidates_evaluated,omitempty"`
	ScoringDurationMs        int64                  `protobuf:"varint,2,opt,name=scoring_duration_ms,json=scoringDurationMs,proto3" json:"scoring_duration_ms,omitempty"`
	StrategyUsed             string                 `protobuf:"bytes,3,opt,name=strategy_used,json=strategyUsed,proto3" json:"strategy_used,omitempty"`
	WeightsApplied           map[string]float64     `protobuf:"bytes,4,rep,name=weights_applied,json=weightsApplied,proto3" json:"weights_applied,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ScoringMetadata) Reset() {
	*x = ScoringMetadata{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScoringMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoringMetadata) ProtoMessage() {}

func (x *ScoringMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoringMetadata.ProtoReflect.Descriptor instead.
func (*ScoringMetadata) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{7}
}

func (x *ScoringMetadata) GetTotalCandidatesEvaluated() int32 {
	if x != nil {
		return x.TotalCandidatesEvaluated
	}
	return 0
}

func (x *ScoringMetadata) GetScoringDurationMs() int64 {
	if x != nil {
		return x.ScoringDurationMs
	}
	return 0
}

func (x *ScoringMetadata) GetStrategyUsed() string {
	if x != nil {
		return x.StrategyUsed
	}
	return ""
}

func (x *ScoringMetadata) GetWeightsApplied() map[string]float64 {
	if x != nil {
		return x.WeightsApplied
	}
	return nil
}

// Batch processing for efficiency
type BatchScoreTaskCandidatesRequest struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Requests      []*ScoreTaskCandidatesRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchScoreTaskCandidatesRequest) Reset() {
	*x = BatchScoreTaskCandidatesRequest{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchScoreTaskCandidatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchScoreTaskCandidatesRequest) ProtoMessage() {}

func (x *BatchScoreTaskCandidatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchScoreTaskCandidatesRequest.ProtoReflect.Descriptor instead.
func (*BatchScoreTaskCandidatesRequest) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{8}
}

func (x *BatchScoreTaskCandidatesRequest) GetRequests() []*ScoreTaskCandidatesRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchScoreTaskCandidatesResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Responses     []*ScoreTaskCandidatesResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchScoreTaskCandidatesResponse) Reset() {
	*x = BatchScoreTaskCandidatesResponse{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchScoreTaskCandidatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchScoreTaskCandidatesResponse) ProtoMessage() {}

func (x *BatchScoreTaskCandidatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchScoreTaskCandidatesResponse.ProtoReflect.Descriptor instead.
func (*BatchScoreTaskCandidatesResponse) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{9}
}

func (x *BatchScoreTaskCandidatesResponse) GetResponses() []*ScoreTaskCandidatesResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

// Fast pre-filtering before expensive scoring
type FilterCandidatesRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Task             *TaskContext           `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	CandidateUserIds []string               `protobuf:"bytes,2,rep,name=candidate_user_ids,json=candidateUserIds,proto3" json:"candidate_user_ids,omitempty"`
	Criteria         *FilterCriteria        `protobuf:"bytes,3,opt,name=criteria,proto3" json:"criteria,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FilterCandidatesRequest) Reset() {
	*x = FilterCandidatesRequest{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterCandidatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterCandidatesRequest) ProtoMessage() {}

func (x *FilterCandidatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterCandidatesRequest.ProtoReflect.Descriptor instead.
func (*FilterCandidatesRequest) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{10}
}

func (x *FilterCandidatesRequest) GetTask() *TaskContext {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *FilterCandidatesRequest) GetCandidateUserIds() []string {
	if x != nil {
		return x.CandidateUserIds
	}
	return nil
}

func (x *FilterCandidatesRequest) GetCriteria() *FilterCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

type FilterCriteria struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	MinRating           float64                `protobuf:"fixed64,1,opt,name=min_rating,json=minRating,proto3" json:"min_rating,omitempty"`
	MaxHourlyRate       float64                `protobuf:"fixed64,2,opt,name=max_hourly_rate,json=maxHourlyRate,proto3" json:"max_hourly_rate,omitempty"`
	RequiredSkills      []string               `protobuf:"bytes,3,rep,name=required_skills,json=requiredSkills,proto3" json:"required_skills,omitempty"`
	ExcludedSkills      []string               `protobuf:"bytes,4,rep,name=excluded_skills,json=excludedSkills,proto3" json:"excluded_skills,omitempty"`
	OnlineOnly          bool                   `protobuf:"varint,5,opt,name=online_only,json=onlineOnly,proto3" json:"online_only,omitempty"`
	MaxHoursSinceActive int32                  `protobuf:"varint,6,opt,name=max_hours_since_active,json=maxHoursSinceActive,proto3" json:"max_hours_since_active,omitempty"`
	TimezonePreference  string                 `protobuf:"bytes,7,opt,name=timezone_preference,json=timezonePreference,proto3" json:"timezone_preference,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *FilterCriteria) Reset() {
	*x = FilterCriteria{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterCriteria) ProtoMessage() {}

func (x *FilterCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterCriteria.ProtoReflect.Descriptor instead.
func (*FilterCriteria) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{11}
}

func (x *FilterCriteria) GetMinRating() float64 {
	if x != nil {
		return x.MinRating
	}
	return 0
}

func (x *FilterCriteria) GetMaxHourlyRate() float64 {
	if x != nil {
		return x.MaxHourlyRate
	}
	return 0
}

func (x *FilterCriteria) GetRequiredSkills() []string {
	if x != nil {
		return x.RequiredSkills
	}
	return nil
}

func (x *FilterCriteria) GetExcludedSkills() []string {
	if x != nil {
		return x.ExcludedSkills
	}
	return nil
}

func (x *FilterCriteria) GetOnlineOnly() bool {
	if x != nil {
		return x.OnlineOnly
	}
	return false
}

func (x *FilterCriteria) GetMaxHoursSinceActive() int32 {
	if x != nil {
		return x.MaxHoursSinceActive
	}
	return 0
}

func (x *FilterCriteria) GetTimezonePreference() string {
	if x != nil {
		return x.TimezonePreference
	}
	return ""
}

type FilterCandidatesResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FilteredUserIds []string               `protobuf:"bytes,1,rep,name=filtered_user_ids,json=filteredUserIds,proto3" json:"filtered_user_ids,omitempty"`
	TotalFiltered   int32                  `protobuf:"varint,2,opt,name=total_filtered,json=totalFiltered,proto3" json:"total_filtered,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FilterCandidatesResponse) Reset() {
	*x = FilterCandidatesResponse{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterCandidatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterCandidatesResponse) ProtoMessage() {}

func (x *FilterCandidatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterCandidatesResponse.ProtoReflect.Descriptor instead.
func (*FilterCandidatesResponse) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{12}
}

func (x *FilterCandidatesResponse) GetFilteredUserIds() []string {
	if x != nil {
		return x.FilteredUserIds
	}
	return nil
}

func (x *FilterCandidatesResponse) GetTotalFiltered() int32 {
	if x != nil {
		return x.TotalFiltered
	}
	return 0
}

// Background similarity precomputation
type PrecomputeSimilaritiesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserIds        []string               `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"` // If empty, process all users
	ForceRecompute bool                   `protobuf:"varint,2,opt,name=force_recompute,json=forceRecompute,proto3" json:"force_recompute,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PrecomputeSimilaritiesRequest) Reset() {
	*x = PrecomputeSimilaritiesRequest{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrecomputeSimilaritiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrecomputeSimilaritiesRequest) ProtoMessage() {}

func (x *PrecomputeSimilaritiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrecomputeSimilaritiesRequest.ProtoReflect.Descriptor instead.
func (*PrecomputeSimilaritiesRequest) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{13}
}

func (x *PrecomputeSimilaritiesRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *PrecomputeSimilaritiesRequest) GetForceRecompute() bool {
	if x != nil {
		return x.ForceRecompute
	}
	return false
}

type UpsertEmbeddingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityId      string                 `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	EntityType    string                 `protobuf:"bytes,2,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"` // "task" or "user"
	Embedding     []float32              `protobuf:"fixed32,3,rep,packed,name=embedding,proto3" json:"embedding,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertEmbeddingRequest) Reset() {
	*x = UpsertEmbeddingRequest{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertEmbeddingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertEmbeddingRequest) ProtoMessage() {}

func (x *UpsertEmbeddingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertEmbeddingRequest.ProtoReflect.Descriptor instead.
func (*UpsertEmbeddingRequest) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{14}
}

func (x *UpsertEmbeddingRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *UpsertEmbeddingRequest) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *UpsertEmbeddingRequest) GetEmbedding() []float32 {
	if x != nil {
		return x.Embedding
	}
	return nil
}

func (x *UpsertEmbeddingRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UpsertEmbeddingRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Checks        map[string]string      `protobuf:"bytes,3,rep,name=checks,proto3" json:"checks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // component -> status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_platform_matching_v1_recommendation_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_platform_matching_v1_recommendation_service_proto_rawDescGZIP(), []int{15}
}

func (x *HealthResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetChecks() map[string]string {
	if x != nil {
		return x.Checks
	}
	return nil
}

var File_platform_matching_v1_recommendation_service_proto protoreflect.FileDescriptor

const file_platform_matching_v1_recommendation_service_proto_rawDesc = "" +
	"\n" +
	"1platform/matching/v1/recommendation_service.proto\x12\x14platform.matching.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xfd\x03\n" +
	"\vTaskContext\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1d\n" +
	"\n" +
	"skill_tags\x18\x02 \x03(\tR\tskillTags\x12,\n" +
	"\x12budget_lower_bound\x18\x03 \x01(\x01R\x10budgetLowerBound\x12,\n" +
	"\x12budget_upper_bound\x18\x04 \x01(\x01R\x10budgetUpperBound\x12\x14\n" +
	"\x05title\x18\x05 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\x16\n" +
	"\x06locale\x18\a \x01(\tR\x06locale\x12\x1a\n" +
	"\bpriority\x18\b \x01(\rR\bpriority\x12)\n" +
	"\x10embedding_vector\x18\t \x03(\x02R\x0fembeddingVector\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12K\n" +
	"\bmetadata\x18\v \x03(\v2/.platform.matching.v1.TaskContext.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xea\x04\n" +
	"\x10CandidateContext\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"skill_tags\x18\x02 \x03(\tR\tskillTags\x12\x1f\n" +
	"\vhourly_rate\x18\x03 \x01(\x01R\n" +
	"hourlyRate\x12\x16\n" +
	"\x06rating\x18\x04 \x01(\x01R\x06rating\x12#\n" +
	"\rresponse_rate\x18\x05 \x01(\x01R\fresponseRate\x12'\n" +
	"\x0facceptance_rate\x18\x06 \x01(\x01R\x0eacceptanceRate\x125\n" +
	"\x17avg_response_time_hours\x18\a \x01(\x01R\x14avgResponseTimeHours\x12)\n" +
	"\x10embedding_vector\x18\b \x03(\x02R\x0fembeddingVector\x12@\n" +
	"\x0elast_active_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\flastActiveAt\x12\x1a\n" +
	"\btimezone\x18\n" +
	" \x01(\tR\btimezone\x12+\n" +
	"\x11preferred_domains\x18\v \x03(\tR\x10preferredDomains\x12f\n" +
	"\x10skill_confidence\x18\f \x03(\v2;.platform.matching.v1.CandidateContext.SkillConfidenceEntryR\x0fskillConfidence\x1aB\n" +
	"\x14SkillConfidenceEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\x89\x03\n" +
	"\x1aScoreTaskCandidatesRequest\x125\n" +
	"\x04task\x18\x01 \x01(\v2!.platform.matching.v1.TaskContextR\x04task\x12F\n" +
	"\n" +
	"candidates\x18\x02 \x03(\v2&.platform.matching.v1.CandidateContextR\n" +
	"candidates\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\rR\x05limit\x12A\n" +
	"\bstrategy\x18\x04 \x01(\v2%.platform.matching.v1.ScoringStrategyR\bstrategy\x12W\n" +
	"\aweights\x18\x05 \x03(\v2=.platform.matching.v1.ScoreTaskCandidatesRequest.WeightsEntryR\aweights\x1a:\n" +
	"\fWeightsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xbb\x01\n" +
	"\x0fScoringStrategy\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12U\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v25.platform.matching.v1.ScoringStrategy.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\x9d\x01\n" +
	"\x0eCandidateScore\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x01R\x05score\x12B\n" +
	"\tbreakdown\x18\x03 \x01(\v2$.platform.matching.v1.ScoreBreakdownR\tbreakdown\x12\x18\n" +
	"\areasons\x18\x04 \x03(\tR\areasons\"\xce\x02\n" +
	"\x0eScoreBreakdown\x12*\n" +
	"\x11skill_match_score\x18\x01 \x01(\x01R\x0fskillMatchScore\x121\n" +
	"\x14embedding_similarity\x18\x02 \x01(\x01R\x13embeddingSimilarity\x12!\n" +
	"\frating_score\x18\x03 \x01(\x01R\vratingScore\x121\n" +
	"\x14responsiveness_score\x18\x04 \x01(\x01R\x13responsivenessScore\x12-\n" +
	"\x12availability_score\x18\x05 \x01(\x01R\x11availabilityScore\x12/\n" +
	"\x13price_compatibility\x18\x06 \x01(\x01R\x12priceCompatibility\x12'\n" +
	"\x0fdiversity_bonus\x18\a \x01(\x01R\x0ediversityBonus\"\x9e\x01\n" +
	"\x1bScoreTaskCandidatesResponse\x12<\n" +
	"\x06scores\x18\x01 \x03(\v2$.platform.matching.v1.CandidateScoreR\x06scores\x12A\n" +
	"\bmetadata\x18\x02 \x01(\v2%.platform.matching.v1.ScoringMetadataR\bmetadata\"\xcb\x02\n" +
	"\x0fScoringMetadata\x12<\n" +
	"\x1atotal_candidates_evaluated\x18\x01 \x01(\x05R\x18totalCandidatesEvaluated\x12.\n" +
	"\x13scoring_duration_ms\x18\x02 \x01(\x03R\x11scoringDurationMs\x12#\n" +
	"\rstrategy_used\x18\x03 \x01(\tR\fstrategyUsed\x12b\n" +
	"\x0fweights_applied\x18\x04 \x03(\v29.platform.matching.v1.ScoringMetadata.WeightsAppliedEntryR\x0eweightsApplied\x1aA\n" +
	"\x13WeightsAppliedEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"o\n" +
	"\x1fBatchScoreTaskCandidatesRequest\x12L\n" +
	"\brequests\x18\x01 \x03(\v20.platform.matching.v1.ScoreTaskCandidatesRequestR\brequests\"s\n" +
	" BatchScoreTaskCandidatesResponse\x12O\n" +
	"\tresponses\x18\x01 \x03(\v21.platform.matching.v1.ScoreTaskCandidatesResponseR\tresponses\"\xc0\x01\n" +
	"\x17FilterCandidatesRequest\x125\n" +
	"\x04task\x18\x01 \x01(\v2!.platform.matching.v1.TaskContextR\x04task\x12,\n" +
	"\x12candidate_user_ids\x18\x02 \x03(\tR\x10candidateUserIds\x12@\n" +
	"\bcriteria\x18\x03 \x01(\v2$.platform.matching.v1.FilterCriteriaR\bcriteria\"\xb0\x02\n" +
	"\x0eFilterCriteria\x12\x1d\n" +
	"\n" +
	"min_rating\x18\x01 \x01(\x01R\tminRating\x12&\n" +
	"\x0fmax_hourly_rate\x18\x02 \x01(\x01R\rmaxHourlyRate\x12'\n" +
	"\x0frequired_skills\x18\x03 \x03(\tR\x0erequiredSkills\x12'\n" +
	"\x0fexcluded_skills\x18\x04 \x03(\tR\x0eexcludedSkills\x12\x1f\n" +
	"\vonline_only\x18\x05 \x01(\bR\n" +
	"onlineOnly\x123\n" +
	"\x16max_hours_since_active\x18\x06 \x01(\x05R\x13maxHoursSinceActive\x12/\n" +
	"\x13timezone_preference\x18\a \x01(\tR\x12timezonePreference\"m\n" +
	"\x18FilterCandidatesResponse\x12*\n" +
	"\x11filtered_user_ids\x18\x01 \x03(\tR\x0ffilteredUserIds\x12%\n" +
	"\x0etotal_filtered\x18\x02 \x01(\x05R\rtotalFiltered\"c\n" +
	"\x1dPrecomputeSimilaritiesRequest\x12\x19\n" +
	"\buser_ids\x18\x01 \x03(\tR\auserIds\x12'\n" +
	"\x0fforce_recompute\x18\x02 \x01(\bR\x0eforceRecompute\"\xc4\x02\n" +
	"\x16UpsertEmbeddingRequest\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\tR\bentityId\x12\x1f\n" +
	"\ventity_type\x18\x02 \x01(\tR\n" +
	"entityType\x12\x1c\n" +
	"\tembedding\x18\x03 \x03(\x02R\tembedding\x129\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12V\n" +
	"\bmetadata\x18\x05 \x03(\v2:.platform.matching.v1.UpsertEmbeddingRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc7\x01\n" +
	"\x0eHealthResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12H\n" +
	"\x06checks\x18\x03 \x03(\v20.platform.matching.v1.HealthResponse.ChecksEntryR\x06checks\x1a9\n" +
	"\vChecksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\x9a\x05\n" +
	"\x15RecommendationService\x12z\n" +
	"\x13ScoreTaskCandidates\x120.platform.matching.v1.ScoreTaskCandidatesRequest\x1a1.platform.matching.v1.ScoreTaskCandidatesResponse\x12\x89\x01\n" +
	"\x18BatchScoreTaskCandidates\x125.platform.matching.v1.BatchScoreTaskCandidatesRequest\x1a6.platform.matching.v1.BatchScoreTaskCandidatesResponse\x12e\n" +
	"\x16PrecomputeSimilarities\x123.platform.matching.v1.PrecomputeSimilaritiesRequest\x1a\x16.google.protobuf.Empty\x12W\n" +
	"\x0fUpsertEmbedding\x12,.platform.matching.v1.UpsertEmbeddingRequest\x1a\x16.google.protobuf.Empty\x12q\n" +
	"\x10FilterCandidates\x12-.platform.matching.v1.FilterCandidatesRequest\x1a..platform.matching.v1.FilterCandidatesResponse\x12F\n" +
	"\x06Health\x12\x16.google.protobuf.Empty\x1a$.platform.matching.v1.HealthResponseBAZ?github.com/Labubutomy/backend/proto/gen/go/platform/matching/v1b\x06proto3"

var (
	file_platform_matching_v1_recommendation_service_proto_rawDescOnce sync.Once
	file_platform_matching_v1_recommendation_service_proto_rawDescData []byte
)

func file_platform_matching_v1_recommendation_service_proto_rawDescGZIP() []byte {
	file_platform_matching_v1_recommendation_service_proto_rawDescOnce.Do(func() {
		file_platform_matching_v1_recommendation_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_platform_matching_v1_recommendation_service_proto_rawDesc), len(file_platform_matching_v1_recommendation_service_proto_rawDesc)))
	})
	return file_platform_matching_v1_recommendation_service_proto_rawDescData
}

var file_platform_matching_v1_recommendation_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_platform_matching_v1_recommendation_service_proto_goTypes = []any{
	(*TaskContext)(nil),                      // 0: platform.matching.v1.TaskContext
	(*CandidateContext)(nil),                 // 1: platform.matching.v1.CandidateContext
	(*ScoreTaskCandidatesRequest)(nil),       // 2: platform.matching.v1.ScoreTaskCandidatesRequest
	(*ScoringStrategy)(nil),                  // 3: platform.matching.v1.ScoringStrategy
	(*CandidateScore)(nil),                   // 4: platform.matching.v1.CandidateScore
	(*ScoreBreakdown)(nil),                   // 5: platform.matching.v1.ScoreBreakdown
	(*ScoreTaskCandidatesResponse)(nil),      // 6: platform.matching.v1.ScoreTaskCandidatesResponse
	(*ScoringMetadata)(nil),                  // 7: platform.matching.v1.ScoringMetadata
	(*BatchScoreTaskCandidatesRequest)(nil),  // 8: platform.matching.v1.BatchScoreTaskCandidatesRequest
	(*BatchScoreTaskCandidatesResponse)(nil), // 9: platform.matching.v1.BatchScoreTaskCandidatesResponse
	(*FilterCandidatesRequest)(nil),          // 10: platform.matching.v1.FilterCandidatesRequest
	(*FilterCriteria)(nil),                   // 11: platform.matching.v1.FilterCriteria
	(*FilterCandidatesResponse)(nil),         // 12: platform.matching.v1.FilterCandidatesResponse
	(*PrecomputeSimilaritiesRequest)(nil),    // 13: platform.matching.v1.PrecomputeSimilaritiesRequest
	(*UpsertEmbeddingRequest)(nil),           // 14: platform.matching.v1.UpsertEmbeddingRequest
	(*HealthResponse)(nil),                   // 15: platform.matching.v1.HealthResponse
	nil,                                      // 16: platform.matching.v1.TaskContext.MetadataEntry
	nil,                                      // 17: platform.matching.v1.CandidateContext.SkillConfidenceEntry
	nil,                                      // 18: platform.matching.v1.ScoreTaskCandidatesRequest.WeightsEntry
	nil,                                      // 19: platform.matching.v1.ScoringStrategy.ParametersEntry
	nil,                                      // 20: platform.matching.v1.ScoringMetadata.WeightsAppliedEntry
	nil,                                      // 21: platform.matching.v1.UpsertEmbeddingRequest.MetadataEntry
	nil,                                      // 22: platform.matching.v1.HealthResponse.ChecksEntry
	(*timestamppb.Timestamp)(nil),            // 23: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                    // 24: google.protobuf.Empty
}
var file_platform_matching_v1_recommendation_service_proto_depIdxs = []int32{
	23, // 0: platform.matching.v1.TaskContext.created_at:type_name -> google.protobuf.Timestamp
	16, // 1: platform.matching.v1.TaskContext.metadata:type_name -> platform.matching.v1.TaskContext.MetadataEntry
	23, // 2: platform.matching.v1.CandidateContext.last_active_at:type_name -> google.protobuf.Timestamp
	17, // 3: platform.matching.v1.CandidateContext.skill_confidence:type_name -> platform.matching.v1.CandidateContext.SkillConfidenceEntry
	0,  // 4: platform.matching.v1.ScoreTaskCandidatesRequest.task:type_name -> platform.matching.v1.TaskContext
	1,  // 5: platform.matching.v1.ScoreTaskCandidatesRequest.candidates:type_name -> platform.matching.v1.CandidateContext
	3,  // 6: platform.matching.v1.ScoreTaskCandidatesRequest.strategy:type_name -> platform.matching.v1.ScoringStrategy
	18, // 7: platform.matching.v1.ScoreTaskCandidatesRequest.weights:type_name -> platform.matching.v1.ScoreTaskCandidatesRequest.WeightsEntry
	19, // 8: platform.matching.v1.ScoringStrategy.parameters:type_name -> platform.matching.v1.ScoringStrategy.ParametersEntry
	5,  // 9: platform.matching.v1.CandidateScore.breakdown:type_name -> platform.matching.v1.ScoreBreakdown
	4,  // 10: platform.matching.v1.ScoreTaskCandidatesResponse.scores:type_name -> platform.matching.v1.CandidateScore
	7,  // 11: platform.matching.v1.ScoreTaskCandidatesResponse.metadata:type_name -> platform.matching.v1.ScoringMetadata
	20, // 12: platform.matching.v1.ScoringMetadata.weights_applied:type_name -> platform.matching.v1.ScoringMetadata.WeightsAppliedEntry
	2,  // 13: platform.matching.v1.BatchScoreTaskCandidatesRequest.requests:type_name -> platform.matching.v1.ScoreTaskCandidatesRequest
	6,  // 14: platform.matching.v1.BatchScoreTaskCandidatesResponse.responses:type_name -> platform.matching.v1.ScoreTaskCandidatesResponse
	0,  // 15: platform.matching.v1.FilterCandidatesRequest.task:type_name -> platform.matching.v1.TaskContext
	11, // 16: platform.matching.v1.FilterCandidatesRequest.criteria:type_name -> platform.matching.v1.FilterCriteria
	23, // 17: platform.matching.v1.UpsertEmbeddingRequest.updated_at:type_name -> google.protobuf.Timestamp
	21, // 18: platform.matching.v1.UpsertEmbeddingRequest.metadata:type_name -> platform.matching.v1.UpsertEmbeddingRequest.MetadataEntry
	22, // 19: platform.matching.v1.HealthResponse.checks:type_name -> platform.matching.v1.HealthResponse.ChecksEntry
	2,  // 20: platform.matching.v1.RecommendationService.ScoreTaskCandidates:input_type -> platform.matching.v1.ScoreTaskCandidatesRequest
	8,  // 21: platform.matching.v1.RecommendationService.BatchScoreTaskCandidates:input_type -> platform.matching.v1.BatchScoreTaskCandidatesRequest
	13, // 22: platform.matching.v1.RecommendationService.PrecomputeSimilarities:input_type -> platform.matching.v1.PrecomputeSimilaritiesRequest
	14, // 23: platform.matching.v1.RecommendationService.UpsertEmbedding:input_type -> platform.matching.v1.UpsertEmbeddingRequest
	10, // 24: platform.matching.v1.RecommendationService.FilterCandidates:input_type -> platform.matching.v1.FilterCandidatesRequest
	24, // 25: platform.matching.v1.RecommendationService.Health:input_type -> google.protobuf.Empty
	6,  // 26: platform.matching.v1.RecommendationService.ScoreTaskCandidates:output_type -> platform.matching.v1.ScoreTaskCandidatesResponse
	9,  // 27: platform.matching.v1.RecommendationService.BatchScoreTaskCandidates:output_type -> platform.matching.v1.BatchScoreTaskCandidatesResponse
	24, // 28: platform.matching.v1.RecommendationService.PrecomputeSimilarities:output_type -> google.protobuf.Empty
	24, // 29: platform.matching.v1.RecommendationService.UpsertEmbedding:output_type -> google.protobuf.Empty
	12, // 30: platform.matching.v1.RecommendationService.FilterCandidates:output_type -> platform.matching.v1.FilterCandidatesResponse
	15, // 31: platform.matching.v1.RecommendationService.Health:output_type -> platform.matching.v1.HealthResponse
	26, // [26:32] is the sub-list for method output_type
	20, // [20:26] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_platform_matching_v1_recommendation_service_proto_init() }
func file_platform_matching_v1_recommendation_service_proto_init() {
	if File_platform_matching_v1_recommendation_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_platform_matching_v1_recommendation_service_proto_rawDesc), len(file_platform_matching_v1_recommendation_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_platform_matching_v1_recommendation_service_proto_goTypes,
		DependencyIndexes: file_platform_matching_v1_recommendation_service_proto_depIdxs,
		MessageInfos:      file_platform_matching_v1_recommendation_service_proto_msgTypes,
	}.Build()
	File_platform_matching_v1_recommendation_service_proto = out.File
	file_platform_matching_v1_recommendation_service_proto_goTypes = nil
	file_platform_matching_v1_recommendation_service_proto_depIdxs = nil
}
