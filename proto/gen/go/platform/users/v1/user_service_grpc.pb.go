// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.33.0
// source: platform/users/v1/user_service.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	UserService_CreateDeveloperProfile_FullMethodName = "/platform.users.v1.UserService/CreateDeveloperProfile"
	UserService_UpdateDeveloperProfile_FullMethodName = "/platform.users.v1.UserService/UpdateDeveloperProfile"
	UserService_UpdatePresence_FullMethodName         = "/platform.users.v1.UserService/UpdatePresence"
	UserService_ListOnlineDevelopers_FullMethodName   = "/platform.users.v1.UserService/ListOnlineDevelopers"
)

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserServiceClient interface {
	CreateDeveloperProfile(ctx context.Context, in *CreateDeveloperProfileRequest, opts ...grpc.CallOption) (*CreateDeveloperProfileResponse, error)
	UpdateDeveloperProfile(ctx context.Context, in *UpdateDeveloperProfileRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdatePresence(ctx context.Context, in *UpdatePresenceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ListOnlineDevelopers(ctx context.Context, in *ListOnlineDevelopersRequest, opts ...grpc.CallOption) (*ListOnlineDevelopersResponse, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) CreateDeveloperProfile(ctx context.Context, in *CreateDeveloperProfileRequest, opts ...grpc.CallOption) (*CreateDeveloperProfileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDeveloperProfileResponse)
	err := c.cc.Invoke(ctx, UserService_CreateDeveloperProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateDeveloperProfile(ctx context.Context, in *UpdateDeveloperProfileRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, UserService_UpdateDeveloperProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdatePresence(ctx context.Context, in *UpdatePresenceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, UserService_UpdatePresence_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ListOnlineDevelopers(ctx context.Context, in *ListOnlineDevelopersRequest, opts ...grpc.CallOption) (*ListOnlineDevelopersResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListOnlineDevelopersResponse)
	err := c.cc.Invoke(ctx, UserService_ListOnlineDevelopers_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
// All implementations must embed UnimplementedUserServiceServer
// for forward compatibility.
type UserServiceServer interface {
	CreateDeveloperProfile(context.Context, *CreateDeveloperProfileRequest) (*CreateDeveloperProfileResponse, error)
	UpdateDeveloperProfile(context.Context, *UpdateDeveloperProfileRequest) (*emptypb.Empty, error)
	UpdatePresence(context.Context, *UpdatePresenceRequest) (*emptypb.Empty, error)
	ListOnlineDevelopers(context.Context, *ListOnlineDevelopersRequest) (*ListOnlineDevelopersResponse, error)
	mustEmbedUnimplementedUserServiceServer()
}

// UnimplementedUserServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedUserServiceServer struct{}

func (UnimplementedUserServiceServer) CreateDeveloperProfile(context.Context, *CreateDeveloperProfileRequest) (*CreateDeveloperProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeveloperProfile not implemented")
}
func (UnimplementedUserServiceServer) UpdateDeveloperProfile(context.Context, *UpdateDeveloperProfileRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeveloperProfile not implemented")
}
func (UnimplementedUserServiceServer) UpdatePresence(context.Context, *UpdatePresenceRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePresence not implemented")
}
func (UnimplementedUserServiceServer) ListOnlineDevelopers(context.Context, *ListOnlineDevelopersRequest) (*ListOnlineDevelopersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOnlineDevelopers not implemented")
}
func (UnimplementedUserServiceServer) mustEmbedUnimplementedUserServiceServer() {}
func (UnimplementedUserServiceServer) testEmbeddedByValue()                     {}

// UnsafeUserServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserServiceServer will
// result in compilation errors.
type UnsafeUserServiceServer interface {
	mustEmbedUnimplementedUserServiceServer()
}

func RegisterUserServiceServer(s grpc.ServiceRegistrar, srv UserServiceServer) {
	// If the following call pancis, it indicates UnimplementedUserServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&UserService_ServiceDesc, srv)
}

func _UserService_CreateDeveloperProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeveloperProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateDeveloperProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_CreateDeveloperProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateDeveloperProfile(ctx, req.(*CreateDeveloperProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateDeveloperProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeveloperProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateDeveloperProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_UpdateDeveloperProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateDeveloperProfile(ctx, req.(*UpdateDeveloperProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdatePresence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePresenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdatePresence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_UpdatePresence_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdatePresence(ctx, req.(*UpdatePresenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ListOnlineDevelopers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOnlineDevelopersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ListOnlineDevelopers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_ListOnlineDevelopers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ListOnlineDevelopers(ctx, req.(*ListOnlineDevelopersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UserService_ServiceDesc is the grpc.ServiceDesc for UserService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "platform.users.v1.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDeveloperProfile",
			Handler:    _UserService_CreateDeveloperProfile_Handler,
		},
		{
			MethodName: "UpdateDeveloperProfile",
			Handler:    _UserService_UpdateDeveloperProfile_Handler,
		},
		{
			MethodName: "UpdatePresence",
			Handler:    _UserService_UpdatePresence_Handler,
		},
		{
			MethodName: "ListOnlineDevelopers",
			Handler:    _UserService_ListOnlineDevelopers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "platform/users/v1/user_service.proto",
}
