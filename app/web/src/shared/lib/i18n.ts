import i18n from 'i18next'
import { initReactI18next } from 'react-i18next'
import LanguageDetector from 'i18next-browser-languagedetector'

// English translations
const en = {
  translation: {
    // Common
    common: {
      loading: 'Loading...',
      error: 'Error',
      success: 'Success',
      cancel: 'Cancel',
      save: 'Save',
      edit: 'Edit',
      delete: 'Delete',
      confirm: 'Confirm',
      back: 'Back',
      next: 'Next',
      previous: 'Previous',
      close: 'Close',
      open: 'Open',
      search: 'Search',
      filter: 'Filter',
      sort: 'Sort',
      refresh: 'Refresh',
      export: 'Export',
      import: 'Import',
      download: 'Download',
      upload: 'Upload',
      submit: 'Submit',
      reset: 'Reset',
      apply: 'Apply',
      clear: 'Clear',
      select: 'Select',
      all: 'All',
      none: 'None',
      yes: 'Yes',
      no: 'No',
      ok: 'OK',
      name: 'Name',
      email: 'Email',
      password: 'Password',
      confirmPassword: 'Confirm Password',
      phone: 'Phone',
      address: 'Address',
      city: 'City',
      country: 'Country',
      date: 'Date',
      time: 'Time',
      status: 'Status',
      priority: 'Priority',
      description: 'Description',
      title: 'Title',
      type: 'Type',
      category: 'Category',
      tags: 'Tags',
      price: 'Price',
      amount: 'Amount',
      total: 'Total',
      subtotal: 'Subtotal',
      tax: 'Tax',
      discount: 'Discount',
      currency: 'Currency',
      language: 'Language',
      theme: 'Theme',
      settings: 'Settings',
      profile: 'Profile',
      logout: 'Logout',
      login: 'Login',
      register: 'Register',
      signIn: 'Sign In',
      signUp: 'Sign Up',
      signOut: 'Sign Out',
      welcome: 'Welcome',
      hello: 'Hello',
      goodbye: 'Goodbye',
      thankYou: 'Thank you',
      please: 'Please',
      sorry: 'Sorry',
      congratulations: 'Congratulations',
      warning: 'Warning',
      info: 'Information',
      help: 'Help',
      support: 'Support',
      contact: 'Contact',
      about: 'About',
      privacy: 'Privacy',
      terms: 'Terms',
      copyright: 'Copyright',
      version: 'Version',
      lastUpdated: 'Last Updated',
      createdAt: 'Created At',
      updatedAt: 'Updated At',
    },

    // Navigation
    nav: {
      dashboard: 'Dashboard',
      tasks: 'Tasks',
      developers: 'Developers',
      customers: 'Customers',
      admin: 'Admin',
      billing: 'Billing',
      notifications: 'Notifications',
      profile: 'Profile',
      settings: 'Settings',
      help: 'Help',
      support: 'Support',
    },

    // Auth
    auth: {
      title: 'Welcome to DevMatch',
      subtitle: 'Connect developers with tasks using AI',
      loginTitle: 'Sign In',
      registerTitle: 'Sign Up',
      emailPlaceholder: 'Enter your email',
      passwordPlaceholder: 'Enter your password',
      confirmPasswordPlaceholder: 'Confirm your password',
      namePlaceholder: 'Enter your name',
      forgotPassword: 'Forgot password?',
      rememberMe: 'Remember me',
      noAccount: "Don't have an account?",
      haveAccount: 'Already have an account?',
      signInWith: 'Sign in with',
      signUpWith: 'Sign up with',
      or: 'or',
      loginButton: 'Sign In',
      registerButton: 'Sign Up',
      socialLogin: {
        google: 'Continue with Google',
        github: 'Continue with GitHub',
      },
      errors: {
        invalidCredentials: 'Invalid email or password',
        userExists: 'User already exists',
        weakPassword: 'Password is too weak',
        invalidEmail: 'Invalid email address',
        passwordsNotMatch: 'Passwords do not match',
        required: 'This field is required',
        minLength: 'Minimum length is {{min}} characters',
        maxLength: 'Maximum length is {{max}} characters',
      },
    },

    // Dashboard
    dashboard: {
      title: 'Dashboard',
      welcome: 'Welcome back, {{name}}!',
      stats: {
        totalTasks: 'Total Tasks',
        aiCompleted: 'AI Completed',
        inProgress: 'In Progress',
        successRate: 'Success Rate',
        activeUsers: 'Active Users',
        tasksInSystem: 'Tasks in System',
        aiSuccessRate: 'AI Success Rate',
        systemHealth: 'System Health',
        tasksCompleted: 'Tasks Completed',
        averageRating: 'Average Rating',
        acceptanceRate: 'Acceptance Rate',
        totalEarned: 'Total Earned',
      },
      recentActivity: 'Recent Activity',
      quickActions: 'Quick Actions',
      createTask: 'Create Task',
      viewTasks: 'View Tasks',
      manageUsers: 'Manage Users',
      viewReports: 'View Reports',
    },

    // Tasks
    tasks: {
      title: 'Tasks',
      createTask: 'Create Task',
      editTask: 'Edit Task',
      deleteTask: 'Delete Task',
      taskDetails: 'Task Details',
      assignTask: 'Assign Task',
      submitSolution: 'Submit Solution',
      reviewTask: 'Review Task',
      approveTask: 'Approve Task',
      rejectTask: 'Reject Task',
      status: {
        todo: 'To Do',
        inProgress: 'In Progress',
        review: 'Review',
        completed: 'Completed',
        cancelled: 'Cancelled',
        aiProcessing: 'AI Processing',
      },
      priority: {
        low: 'Low',
        medium: 'Medium',
        high: 'High',
      },
      fields: {
        title: 'Task Title',
        description: 'Description',
        requirements: 'Requirements',
        solution: 'Solution',
        validation: 'Validation',
        feedback: 'Feedback',
        history: 'History',
        attachments: 'Attachments',
        tags: 'Tags',
        dueDate: 'Due Date',
        budget: 'Budget',
        assignee: 'Assignee',
        customer: 'Customer',
        developer: 'Developer',
        createdAt: 'Created At',
        updatedAt: 'Updated At',
      },
      actions: {
        claim: 'Claim Task',
        unclaim: 'Unclaim Task',
        start: 'Start Task',
        pause: 'Pause Task',
        resume: 'Resume Task',
        complete: 'Complete Task',
        submit: 'Submit Solution',
        approve: 'Approve',
        reject: 'Reject',
        requestChanges: 'Request Changes',
        addComment: 'Add Comment',
        addAttachment: 'Add Attachment',
        viewDetails: 'View Details',
        editDetails: 'Edit Details',
      },
      validation: {
        unitTests: 'Unit Tests',
        eslint: 'ESLint',
        coverage: 'Coverage',
        typescript: 'TypeScript',
        security: 'Security',
        passed: 'Passed',
        failed: 'Failed',
        errors: 'Errors',
        warnings: 'Warnings',
        vulnerabilities: 'Vulnerabilities',
      },
      feedback: {
        rating: 'Rating',
        comment: 'Comment',
        response: 'Response',
        submitFeedback: 'Submit Feedback',
        respondToFeedback: 'Respond to Feedback',
      },
    },

    // Developers
    developers: {
      title: 'Developers',
      skillMatch: 'Skill Match',
      availableTasks: 'Available Tasks',
      myTasks: 'My Tasks',
      skills: {
        frontend: 'Frontend',
        backend: 'Backend',
        devops: 'DevOps',
        aiMl: 'AI/ML',
        design: 'Design',
        other: 'Other',
      },
      stats: {
        tasksCompleted: 'Tasks Completed',
        averageRating: 'Average Rating',
        acceptanceRate: 'Acceptance Rate',
        totalEarned: 'Total Earned',
        responseTime: 'Response Time',
        reputationScore: 'Reputation Score',
      },
      taskStatus: {
        assigned: 'Assigned',
        inProgress: 'In Progress',
        validation: 'Validation',
        completed: 'Completed',
      },
    },

    // Profile
    profile: {
      title: 'Profile',
      editProfile: 'Edit Profile',
      personalInfo: 'Personal Information',
      skillsLabel: 'Skills',
      stats: 'Stats & Analytics',
      ratingHistory: 'Rating History',
      notificationPreferences: 'Notification Preferences',
      fields: {
        name: 'Full Name',
        email: 'Email Address',
        bio: 'Bio',
        location: 'Location',
        website: 'Website',
        avatar: 'Avatar',
        role: 'Role',
        skillsLabel: 'Skills',
        experience: 'Experience',
        education: 'Education',
        certifications: 'Certifications',
        portfolio: 'Portfolio',
        socialLinks: 'Social Links',
      },
      skills: {
        addSkill: 'Add Skill',
        editSkill: 'Edit Skill',
        removeSkill: 'Remove Skill',
        skillLevel: 'Skill Level',
        beginner: 'Beginner',
        intermediate: 'Intermediate',
        advanced: 'Advanced',
        expert: 'Expert',
      },
      notifications: {
        email: 'Email Notifications',
        push: 'Push Notifications',
        sms: 'SMS Notifications',
        quietHours: 'Quiet Hours',
        enabled: 'Enabled',
        disabled: 'Disabled',
        from: 'From',
        to: 'To',
      },
    },

    // Admin
    admin: {
      title: 'Admin Panel',
      systemOverview: 'System Overview',
      aiPerformance: 'AI Performance',
      developerPool: 'Developer Pool',
      financialReports: 'Financial Reports',
      userManagement: 'User Management',
      systemSettings: 'System Settings',
      fields: {
        accuracy: 'Accuracy',
        falsePositiveRate: 'False Positive Rate',
        falseNegativeRate: 'False Negative Rate',
        learningProgress: 'Learning Progress',
        modelVersion: 'Model Version',
        totalDevelopers: 'Total Developers',
        availableDevelopers: 'Available Developers',
        averageRating: 'Average Rating',
        skillGaps: 'Skill Gaps',
        totalRevenue: 'Total Revenue',
        monthlyRevenue: 'Monthly Revenue',
        pendingPayouts: 'Pending Payouts',
        completedPayouts: 'Completed Payouts',
      },
      actions: {
        updateModel: 'Update Model',
        generateReport: 'Generate Report',
        exportData: 'Export Data',
        refreshData: 'Refresh Data',
      },
    },

    // Billing
    billing: {
      title: 'Billing & Payments',
      paymentMethods: 'Payment Methods',
      billingHistory: 'Billing History',
      invoices: 'Invoices & Receipts',
      quickPayment: 'Quick Payment',
      addPaymentMethod: 'Add Payment Method',
      editPaymentMethod: 'Edit Payment Method',
      deletePaymentMethod: 'Delete Payment Method',
      setDefault: 'Set Default',
      makePayment: 'Make Payment',
      fields: {
        cardNumber: 'Card Number',
        expiryDate: 'Expiry Date',
        cvv: 'CVV',
        cardholderName: 'Cardholder Name',
        billingAddress: 'Billing Address',
        amount: 'Amount',
        description: 'Description',
        paymentMethod: 'Payment Method',
      },
      status: {
        pending: 'Pending',
        completed: 'Completed',
        failed: 'Failed',
        draft: 'Draft',
        sent: 'Sent',
        paid: 'Paid',
        overdue: 'Overdue',
      },
      types: {
        card: 'Card',
        paypal: 'PayPal',
        crypto: 'Cryptocurrency',
      },
    },

    // Notifications
    notifications: {
      title: 'Notifications',
      all: 'All Notifications',
      unread: 'Unread',
      tasks: 'Task Notifications',
      payments: 'Payment Notifications',
      system: 'System Notifications',
      markAllRead: 'Mark All Read',
      markAsRead: 'Mark as Read',
      delete: 'Delete',
      settings: 'Settings',
      preferences: 'Preferences',
      types: {
        task: 'Task',
        payment: 'Payment',
        system: 'System',
      },
      messages: {
        newTaskAssigned: 'New task assigned: {{taskTitle}}',
        taskCompleted: 'Task completed: {{taskTitle}}',
        paymentReceived: 'Payment received: ${{amount}}',
        systemMaintenance: 'System maintenance scheduled',
        noNotifications: 'No notifications',
        allCaughtUp: "You're all caught up!",
      },
    },

    // Theme
    theme: {
      light: 'Light',
      dark: 'Dark',
      system: 'System',
      toggleTheme: 'Toggle theme',
    },

    // Errors
    errors: {
      notFound: 'Page not found',
      accessDenied: 'Access denied',
      serverError: 'Server error',
      networkError: 'Network error',
      unauthorized: 'Unauthorized',
      forbidden: 'Forbidden',
      validationError: 'Validation error',
      unknownError: 'Unknown error',
    },
  },
}

// Russian translations
const ru = {
  translation: {
    // Common
    common: {
      loading: 'Загрузка...',
      error: 'Ошибка',
      success: 'Успешно',
      cancel: 'Отмена',
      save: 'Сохранить',
      edit: 'Редактировать',
      delete: 'Удалить',
      confirm: 'Подтвердить',
      back: 'Назад',
      next: 'Далее',
      previous: 'Предыдущий',
      close: 'Закрыть',
      open: 'Открыть',
      search: 'Поиск',
      filter: 'Фильтр',
      sort: 'Сортировка',
      refresh: 'Обновить',
      export: 'Экспорт',
      import: 'Импорт',
      download: 'Скачать',
      upload: 'Загрузить',
      submit: 'Отправить',
      reset: 'Сбросить',
      apply: 'Применить',
      clear: 'Очистить',
      select: 'Выбрать',
      all: 'Все',
      none: 'Нет',
      yes: 'Да',
      no: 'Нет',
      ok: 'ОК',
      name: 'Имя',
      email: 'Email',
      password: 'Пароль',
      confirmPassword: 'Подтвердите пароль',
      phone: 'Телефон',
      address: 'Адрес',
      city: 'Город',
      country: 'Страна',
      date: 'Дата',
      time: 'Время',
      status: 'Статус',
      priority: 'Приоритет',
      description: 'Описание',
      title: 'Заголовок',
      type: 'Тип',
      category: 'Категория',
      tags: 'Теги',
      price: 'Цена',
      amount: 'Сумма',
      total: 'Итого',
      subtotal: 'Подытог',
      tax: 'Налог',
      discount: 'Скидка',
      currency: 'Валюта',
      language: 'Язык',
      theme: 'Тема',
      settings: 'Настройки',
      profile: 'Профиль',
      logout: 'Выйти',
      login: 'Войти',
      register: 'Регистрация',
      signIn: 'Войти',
      signUp: 'Зарегистрироваться',
      signOut: 'Выйти',
      welcome: 'Добро пожаловать',
      hello: 'Привет',
      goodbye: 'До свидания',
      thankYou: 'Спасибо',
      please: 'Пожалуйста',
      sorry: 'Извините',
      congratulations: 'Поздравляем',
      warning: 'Предупреждение',
      info: 'Информация',
      help: 'Помощь',
      support: 'Поддержка',
      contact: 'Контакты',
      about: 'О нас',
      privacy: 'Конфиденциальность',
      terms: 'Условия',
      copyright: 'Авторские права',
      version: 'Версия',
      lastUpdated: 'Последнее обновление',
      createdAt: 'Создано',
      updatedAt: 'Обновлено',
    },

    // Navigation
    nav: {
      dashboard: 'Панель управления',
      tasks: 'Задачи',
      developers: 'Разработчики',
      customers: 'Заказчики',
      admin: 'Админ',
      billing: 'Биллинг',
      notifications: 'Уведомления',
      profile: 'Профиль',
      settings: 'Настройки',
      help: 'Помощь',
      support: 'Поддержка',
    },

    // Auth
    auth: {
      title: 'Добро пожаловать в DevMatch',
      subtitle: 'Соединяем разработчиков с задачами с помощью ИИ',
      loginTitle: 'Вход',
      registerTitle: 'Регистрация',
      emailPlaceholder: 'Введите ваш email',
      passwordPlaceholder: 'Введите ваш пароль',
      confirmPasswordPlaceholder: 'Подтвердите ваш пароль',
      namePlaceholder: 'Введите ваше имя',
      forgotPassword: 'Забыли пароль?',
      rememberMe: 'Запомнить меня',
      noAccount: 'Нет аккаунта?',
      haveAccount: 'Уже есть аккаунт?',
      signInWith: 'Войти через',
      signUpWith: 'Зарегистрироваться через',
      or: 'или',
      loginButton: 'Войти',
      registerButton: 'Зарегистрироваться',
      socialLogin: {
        google: 'Продолжить с Google',
        github: 'Продолжить с GitHub',
      },
      errors: {
        invalidCredentials: 'Неверный email или пароль',
        userExists: 'Пользователь уже существует',
        weakPassword: 'Пароль слишком слабый',
        invalidEmail: 'Неверный email адрес',
        passwordsNotMatch: 'Пароли не совпадают',
        required: 'Это поле обязательно',
        minLength: 'Минимальная длина {{min}} символов',
        maxLength: 'Максимальная длина {{max}} символов',
      },
    },

    // Dashboard
    dashboard: {
      title: 'Панель управления',
      welcome: 'Добро пожаловать, {{name}}!',
      stats: {
        totalTasks: 'Всего задач',
        aiCompleted: 'Выполнено ИИ',
        inProgress: 'В работе',
        successRate: 'Успешность',
        activeUsers: 'Активные пользователи',
        tasksInSystem: 'Задач в системе',
        aiSuccessRate: 'Успешность ИИ',
        systemHealth: 'Состояние системы',
        tasksCompleted: 'Выполнено задач',
        averageRating: 'Средний рейтинг',
        acceptanceRate: 'Процент принятия',
        totalEarned: 'Всего заработано',
      },
      recentActivity: 'Недавняя активность',
      quickActions: 'Быстрые действия',
      createTask: 'Создать задачу',
      viewTasks: 'Просмотреть задачи',
      manageUsers: 'Управление пользователями',
      viewReports: 'Просмотреть отчеты',
    },

    // Tasks
    tasks: {
      title: 'Задачи',
      createTask: 'Создать задачу',
      editTask: 'Редактировать задачу',
      deleteTask: 'Удалить задачу',
      taskDetails: 'Детали задачи',
      assignTask: 'Назначить задачу',
      submitSolution: 'Отправить решение',
      reviewTask: 'Проверить задачу',
      approveTask: 'Одобрить задачу',
      rejectTask: 'Отклонить задачу',
      status: {
        todo: 'К выполнению',
        inProgress: 'В работе',
        review: 'На проверке',
        completed: 'Завершено',
        cancelled: 'Отменено',
        aiProcessing: 'Обработка ИИ',
      },
      priority: {
        low: 'Низкий',
        medium: 'Средний',
        high: 'Высокий',
      },
      fields: {
        title: 'Название задачи',
        description: 'Описание',
        requirements: 'Требования',
        solution: 'Решение',
        validation: 'Проверка',
        feedback: 'Обратная связь',
        history: 'История',
        attachments: 'Вложения',
        tags: 'Теги',
        dueDate: 'Срок выполнения',
        budget: 'Бюджет',
        assignee: 'Исполнитель',
        customer: 'Заказчик',
        developer: 'Разработчик',
        createdAt: 'Создано',
        updatedAt: 'Обновлено',
      },
      actions: {
        claim: 'Взять задачу',
        unclaim: 'Отказаться от задачи',
        start: 'Начать задачу',
        pause: 'Приостановить задачу',
        resume: 'Продолжить задачу',
        complete: 'Завершить задачу',
        submit: 'Отправить решение',
        approve: 'Одобрить',
        reject: 'Отклонить',
        requestChanges: 'Запросить изменения',
        addComment: 'Добавить комментарий',
        addAttachment: 'Добавить вложение',
        viewDetails: 'Просмотреть детали',
        editDetails: 'Редактировать детали',
      },
      validation: {
        unitTests: 'Юнит-тесты',
        eslint: 'ESLint',
        coverage: 'Покрытие',
        typescript: 'TypeScript',
        security: 'Безопасность',
        passed: 'Пройдено',
        failed: 'Не пройдено',
        errors: 'Ошибки',
        warnings: 'Предупреждения',
        vulnerabilities: 'Уязвимости',
      },
      feedback: {
        rating: 'Рейтинг',
        comment: 'Комментарий',
        response: 'Ответ',
        submitFeedback: 'Отправить отзыв',
        respondToFeedback: 'Ответить на отзыв',
      },
    },

    // Developers
    developers: {
      title: 'Разработчики',
      skillMatch: 'Соответствие навыков',
      availableTasks: 'Доступные задачи',
      myTasks: 'Мои задачи',
      skills: {
        frontend: 'Frontend',
        backend: 'Backend',
        devops: 'DevOps',
        aiMl: 'ИИ/МО',
        design: 'Дизайн',
        other: 'Другое',
      },
      stats: {
        tasksCompleted: 'Выполнено задач',
        averageRating: 'Средний рейтинг',
        acceptanceRate: 'Процент принятия',
        totalEarned: 'Всего заработано',
        responseTime: 'Время отклика',
        reputationScore: 'Репутация',
      },
      taskStatus: {
        assigned: 'Назначено',
        inProgress: 'В работе',
        validation: 'Проверка',
        completed: 'Завершено',
      },
    },

    // Profile
    profile: {
      title: 'Профиль',
      editProfile: 'Редактировать профиль',
      personalInfo: 'Личная информация',
      skillsLabel: 'Навыки',
      stats: 'Статистика и аналитика',
      ratingHistory: 'История рейтингов',
      notificationPreferences: 'Настройки уведомлений',
      fields: {
        name: 'Полное имя',
        email: 'Email адрес',
        bio: 'О себе',
        location: 'Местоположение',
        website: 'Веб-сайт',
        avatar: 'Аватар',
        role: 'Роль',
        skills: 'Навыки',
        experience: 'Опыт',
        education: 'Образование',
        certifications: 'Сертификаты',
        portfolio: 'Портфолио',
        socialLinks: 'Социальные ссылки',
      },
      skills: {
        addSkill: 'Добавить навык',
        editSkill: 'Редактировать навык',
        removeSkill: 'Удалить навык',
        skillLevel: 'Уровень навыка',
        beginner: 'Начинающий',
        intermediate: 'Средний',
        advanced: 'Продвинутый',
        expert: 'Эксперт',
      },
      notifications: {
        email: 'Email уведомления',
        push: 'Push уведомления',
        sms: 'SMS уведомления',
        quietHours: 'Тихие часы',
        enabled: 'Включено',
        disabled: 'Отключено',
        from: 'С',
        to: 'До',
      },
    },

    // Admin
    admin: {
      title: 'Админ панель',
      systemOverview: 'Обзор системы',
      aiPerformance: 'Производительность ИИ',
      developerPool: 'Пул разработчиков',
      financialReports: 'Финансовые отчеты',
      userManagement: 'Управление пользователями',
      systemSettings: 'Настройки системы',
      fields: {
        accuracy: 'Точность',
        falsePositiveRate: 'Ложные срабатывания',
        falseNegativeRate: 'Пропуски',
        learningProgress: 'Прогресс обучения',
        modelVersion: 'Версия модели',
        totalDevelopers: 'Всего разработчиков',
        availableDevelopers: 'Доступных разработчиков',
        averageRating: 'Средний рейтинг',
        skillGaps: 'Пробелы в навыках',
        totalRevenue: 'Общий доход',
        monthlyRevenue: 'Месячный доход',
        pendingPayouts: 'Ожидающие выплаты',
        completedPayouts: 'Завершенные выплаты',
      },
      actions: {
        updateModel: 'Обновить модель',
        generateReport: 'Создать отчет',
        exportData: 'Экспортировать данные',
        refreshData: 'Обновить данные',
      },
    },

    // Billing
    billing: {
      title: 'Биллинг и платежи',
      paymentMethods: 'Способы оплаты',
      billingHistory: 'История платежей',
      invoices: 'Счета и квитанции',
      quickPayment: 'Быстрая оплата',
      addPaymentMethod: 'Добавить способ оплаты',
      editPaymentMethod: 'Редактировать способ оплаты',
      deletePaymentMethod: 'Удалить способ оплаты',
      setDefault: 'Установить по умолчанию',
      makePayment: 'Оплатить',
      fields: {
        cardNumber: 'Номер карты',
        expiryDate: 'Срок действия',
        cvv: 'CVV',
        cardholderName: 'Имя держателя карты',
        billingAddress: 'Адрес для выставления счета',
        amount: 'Сумма',
        description: 'Описание',
        paymentMethod: 'Способ оплаты',
      },
      status: {
        pending: 'Ожидает',
        completed: 'Завершено',
        failed: 'Не удалось',
        draft: 'Черновик',
        sent: 'Отправлено',
        paid: 'Оплачено',
        overdue: 'Просрочено',
      },
      types: {
        card: 'Карта',
        paypal: 'PayPal',
        crypto: 'Криптовалюта',
      },
    },

    // Notifications
    notifications: {
      title: 'Уведомления',
      all: 'Все уведомления',
      unread: 'Непрочитанные',
      tasks: 'Уведомления о задачах',
      payments: 'Уведомления о платежах',
      system: 'Системные уведомления',
      markAllRead: 'Отметить все как прочитанные',
      markAsRead: 'Отметить как прочитанное',
      delete: 'Удалить',
      settings: 'Настройки',
      preferences: 'Предпочтения',
      types: {
        task: 'Задача',
        payment: 'Платеж',
        system: 'Система',
      },
      messages: {
        newTaskAssigned: 'Новая задача назначена: {{taskTitle}}',
        taskCompleted: 'Задача завершена: {{taskTitle}}',
        paymentReceived: 'Платеж получен: ${{amount}}',
        systemMaintenance: 'Запланировано техническое обслуживание',
        noNotifications: 'Нет уведомлений',
        allCaughtUp: 'Вы в курсе всех событий!',
      },
    },

    // Theme
    theme: {
      light: 'Светлая',
      dark: 'Темная',
      system: 'Системная',
      toggleTheme: 'Переключить тему',
    },

    // Errors
    errors: {
      notFound: 'Страница не найдена',
      accessDenied: 'Доступ запрещен',
      serverError: 'Ошибка сервера',
      networkError: 'Ошибка сети',
      unauthorized: 'Не авторизован',
      forbidden: 'Запрещено',
      validationError: 'Ошибка валидации',
      unknownError: 'Неизвестная ошибка',
    },
  },
}

i18n
  .use(LanguageDetector)
  .use(initReactI18next)
  .init({
    resources: {
      en,
      ru,
    },
    fallbackLng: 'en',
    debug: false, // Disable debug to prevent console spam
    interpolation: {
      escapeValue: false,
    },
    detection: {
      order: ['localStorage', 'navigator', 'htmlTag'],
      caches: ['localStorage'],
    },
    react: {
      useSuspense: false, // Disable suspense to prevent loading issues
    },
  })

export default i18n
